/*
 * This file is generated by jOOQ.
 */
package com.supervisor.generated.jooq.tables.records;


import com.supervisor.generated.jooq.tables.GaugeSetting;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GaugeSettingRecord extends UpdatableRecordImpl<GaugeSettingRecord> implements Record14<LocalDateTime, UUID, LocalDateTime, UUID, UUID, String, UUID, Integer, String, Double, Double, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.gauge_setting.creation_date</code>.
     */
    public void setCreationDate(LocalDateTime value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.gauge_setting.creation_date</code>.
     */
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(0);
    }

    /**
     * Setter for <code>public.gauge_setting.creator_id</code>.
     */
    public void setCreatorId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.gauge_setting.creator_id</code>.
     */
    public UUID getCreatorId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.gauge_setting.last_modification_date</code>.
     */
    public void setLastModificationDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.gauge_setting.last_modification_date</code>.
     */
    public LocalDateTime getLastModificationDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.gauge_setting.last_modifier_id</code>.
     */
    public void setLastModifierId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.gauge_setting.last_modifier_id</code>.
     */
    public UUID getLastModifierId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.gauge_setting.owner_id</code>.
     */
    public void setOwnerId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.gauge_setting.owner_id</code>.
     */
    public UUID getOwnerId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.gauge_setting.tag</code>.
     */
    public void setTag(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.gauge_setting.tag</code>.
     */
    public String getTag() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.gauge_setting.id</code>.
     */
    public void setId(UUID value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.gauge_setting.id</code>.
     */
    public UUID getId() {
        return (UUID) get(6);
    }

    /**
     * Setter for <code>public.gauge_setting.minor_ticks</code>.
     */
    public void setMinorTicks(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.gauge_setting.minor_ticks</code>.
     */
    public Integer getMinorTicks() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.gauge_setting.symbol_position</code>.
     */
    public void setSymbolPosition(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.gauge_setting.symbol_position</code>.
     */
    public String getSymbolPosition() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.gauge_setting.max</code>.
     */
    public void setMax(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.gauge_setting.max</code>.
     */
    public Double getMax() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>public.gauge_setting.min</code>.
     */
    public void setMin(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.gauge_setting.min</code>.
     */
    public Double getMin() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>public.gauge_setting.gauge_type</code>.
     */
    public void setGaugeType(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.gauge_setting.gauge_type</code>.
     */
    public String getGaugeType() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.gauge_setting.unity_symbol</code>.
     */
    public void setUnitySymbol(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.gauge_setting.unity_symbol</code>.
     */
    public String getUnitySymbol() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.gauge_setting.major_ticks</code>.
     */
    public void setMajorTicks(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.gauge_setting.major_ticks</code>.
     */
    public Integer getMajorTicks() {
        return (Integer) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<LocalDateTime, UUID, LocalDateTime, UUID, UUID, String, UUID, Integer, String, Double, Double, String, String, Integer> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<LocalDateTime, UUID, LocalDateTime, UUID, UUID, String, UUID, Integer, String, Double, Double, String, String, Integer> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<LocalDateTime> field1() {
        return GaugeSetting.GAUGE_SETTING.CREATION_DATE;
    }

    @Override
    public Field<UUID> field2() {
        return GaugeSetting.GAUGE_SETTING.CREATOR_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return GaugeSetting.GAUGE_SETTING.LAST_MODIFICATION_DATE;
    }

    @Override
    public Field<UUID> field4() {
        return GaugeSetting.GAUGE_SETTING.LAST_MODIFIER_ID;
    }

    @Override
    public Field<UUID> field5() {
        return GaugeSetting.GAUGE_SETTING.OWNER_ID;
    }

    @Override
    public Field<String> field6() {
        return GaugeSetting.GAUGE_SETTING.TAG;
    }

    @Override
    public Field<UUID> field7() {
        return GaugeSetting.GAUGE_SETTING.ID;
    }

    @Override
    public Field<Integer> field8() {
        return GaugeSetting.GAUGE_SETTING.MINOR_TICKS;
    }

    @Override
    public Field<String> field9() {
        return GaugeSetting.GAUGE_SETTING.SYMBOL_POSITION;
    }

    @Override
    public Field<Double> field10() {
        return GaugeSetting.GAUGE_SETTING.MAX;
    }

    @Override
    public Field<Double> field11() {
        return GaugeSetting.GAUGE_SETTING.MIN;
    }

    @Override
    public Field<String> field12() {
        return GaugeSetting.GAUGE_SETTING.GAUGE_TYPE;
    }

    @Override
    public Field<String> field13() {
        return GaugeSetting.GAUGE_SETTING.UNITY_SYMBOL;
    }

    @Override
    public Field<Integer> field14() {
        return GaugeSetting.GAUGE_SETTING.MAJOR_TICKS;
    }

    @Override
    public LocalDateTime component1() {
        return getCreationDate();
    }

    @Override
    public UUID component2() {
        return getCreatorId();
    }

    @Override
    public LocalDateTime component3() {
        return getLastModificationDate();
    }

    @Override
    public UUID component4() {
        return getLastModifierId();
    }

    @Override
    public UUID component5() {
        return getOwnerId();
    }

    @Override
    public String component6() {
        return getTag();
    }

    @Override
    public UUID component7() {
        return getId();
    }

    @Override
    public Integer component8() {
        return getMinorTicks();
    }

    @Override
    public String component9() {
        return getSymbolPosition();
    }

    @Override
    public Double component10() {
        return getMax();
    }

    @Override
    public Double component11() {
        return getMin();
    }

    @Override
    public String component12() {
        return getGaugeType();
    }

    @Override
    public String component13() {
        return getUnitySymbol();
    }

    @Override
    public Integer component14() {
        return getMajorTicks();
    }

    @Override
    public LocalDateTime value1() {
        return getCreationDate();
    }

    @Override
    public UUID value2() {
        return getCreatorId();
    }

    @Override
    public LocalDateTime value3() {
        return getLastModificationDate();
    }

    @Override
    public UUID value4() {
        return getLastModifierId();
    }

    @Override
    public UUID value5() {
        return getOwnerId();
    }

    @Override
    public String value6() {
        return getTag();
    }

    @Override
    public UUID value7() {
        return getId();
    }

    @Override
    public Integer value8() {
        return getMinorTicks();
    }

    @Override
    public String value9() {
        return getSymbolPosition();
    }

    @Override
    public Double value10() {
        return getMax();
    }

    @Override
    public Double value11() {
        return getMin();
    }

    @Override
    public String value12() {
        return getGaugeType();
    }

    @Override
    public String value13() {
        return getUnitySymbol();
    }

    @Override
    public Integer value14() {
        return getMajorTicks();
    }

    @Override
    public GaugeSettingRecord value1(LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value2(UUID value) {
        setCreatorId(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value3(LocalDateTime value) {
        setLastModificationDate(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value4(UUID value) {
        setLastModifierId(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value5(UUID value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value6(String value) {
        setTag(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value7(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value8(Integer value) {
        setMinorTicks(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value9(String value) {
        setSymbolPosition(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value10(Double value) {
        setMax(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value11(Double value) {
        setMin(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value12(String value) {
        setGaugeType(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value13(String value) {
        setUnitySymbol(value);
        return this;
    }

    @Override
    public GaugeSettingRecord value14(Integer value) {
        setMajorTicks(value);
        return this;
    }

    @Override
    public GaugeSettingRecord values(LocalDateTime value1, UUID value2, LocalDateTime value3, UUID value4, UUID value5, String value6, UUID value7, Integer value8, String value9, Double value10, Double value11, String value12, String value13, Integer value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GaugeSettingRecord
     */
    public GaugeSettingRecord() {
        super(GaugeSetting.GAUGE_SETTING);
    }

    /**
     * Create a detached, initialised GaugeSettingRecord
     */
    public GaugeSettingRecord(LocalDateTime creationDate, UUID creatorId, LocalDateTime lastModificationDate, UUID lastModifierId, UUID ownerId, String tag, UUID id, Integer minorTicks, String symbolPosition, Double max, Double min, String gaugeType, String unitySymbol, Integer majorTicks) {
        super(GaugeSetting.GAUGE_SETTING);

        setCreationDate(creationDate);
        setCreatorId(creatorId);
        setLastModificationDate(lastModificationDate);
        setLastModifierId(lastModifierId);
        setOwnerId(ownerId);
        setTag(tag);
        setId(id);
        setMinorTicks(minorTicks);
        setSymbolPosition(symbolPosition);
        setMax(max);
        setMin(min);
        setGaugeType(gaugeType);
        setUnitySymbol(unitySymbol);
        setMajorTicks(majorTicks);
    }
}
