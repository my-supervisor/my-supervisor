/*
 * This file is generated by jOOQ.
 */
package com.supervisor.generated.jooq.tables;


import com.supervisor.generated.jooq.Keys;
import com.supervisor.generated.jooq.Public;
import com.supervisor.generated.jooq.tables.records.NumberOrientedSettingRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NumberOrientedSetting extends TableImpl<NumberOrientedSettingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.number_oriented_setting</code>
     */
    public static final NumberOrientedSetting NUMBER_ORIENTED_SETTING = new NumberOrientedSetting();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NumberOrientedSettingRecord> getRecordType() {
        return NumberOrientedSettingRecord.class;
    }

    /**
     * The column <code>public.number_oriented_setting.creation_date</code>.
     */
    public final TableField<NumberOrientedSettingRecord, LocalDateTime> CREATION_DATE = createField(DSL.name("creation_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.number_oriented_setting.creator_id</code>.
     */
    public final TableField<NumberOrientedSettingRecord, UUID> CREATOR_ID = createField(DSL.name("creator_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public.number_oriented_setting.last_modification_date</code>.
     */
    public final TableField<NumberOrientedSettingRecord, LocalDateTime> LAST_MODIFICATION_DATE = createField(DSL.name("last_modification_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.number_oriented_setting.last_modifier_id</code>.
     */
    public final TableField<NumberOrientedSettingRecord, UUID> LAST_MODIFIER_ID = createField(DSL.name("last_modifier_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.number_oriented_setting.owner_id</code>.
     */
    public final TableField<NumberOrientedSettingRecord, UUID> OWNER_ID = createField(DSL.name("owner_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.number_oriented_setting.tag</code>.
     */
    public final TableField<NumberOrientedSettingRecord, String> TAG = createField(DSL.name("tag"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.number_oriented_setting.id</code>.
     */
    public final TableField<NumberOrientedSettingRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public.number_oriented_setting.manage_evolution_percent</code>.
     */
    public final TableField<NumberOrientedSettingRecord, Boolean> MANAGE_EVOLUTION_PERCENT = createField(DSL.name("manage_evolution_percent"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.number_oriented_setting.unity_symbol</code>.
     */
    public final TableField<NumberOrientedSettingRecord, String> UNITY_SYMBOL = createField(DSL.name("unity_symbol"), SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.number_oriented_setting.symbol_position</code>.
     */
    public final TableField<NumberOrientedSettingRecord, String> SYMBOL_POSITION = createField(DSL.name("symbol_position"), SQLDataType.VARCHAR.nullable(false), this, "");

    private NumberOrientedSetting(Name alias, Table<NumberOrientedSettingRecord> aliased) {
        this(alias, aliased, null);
    }

    private NumberOrientedSetting(Name alias, Table<NumberOrientedSettingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.number_oriented_setting</code> table
     * reference
     */
    public NumberOrientedSetting(String alias) {
        this(DSL.name(alias), NUMBER_ORIENTED_SETTING);
    }

    /**
     * Create an aliased <code>public.number_oriented_setting</code> table
     * reference
     */
    public NumberOrientedSetting(Name alias) {
        this(alias, NUMBER_ORIENTED_SETTING);
    }

    /**
     * Create a <code>public.number_oriented_setting</code> table reference
     */
    public NumberOrientedSetting() {
        this(DSL.name("number_oriented_setting"), null);
    }

    public <O extends Record> NumberOrientedSetting(Table<O> child, ForeignKey<O, NumberOrientedSettingRecord> key) {
        super(child, key, NUMBER_ORIENTED_SETTING);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<NumberOrientedSettingRecord> getPrimaryKey() {
        return Keys.NUMBER_ORIENTED_SETTING_PKEY;
    }

    @Override
    public List<ForeignKey<NumberOrientedSettingRecord, ?>> getReferences() {
        return Arrays.asList(Keys.NUMBER_ORIENTED_SETTING__NUMBER_ORIENTED_SETTING_ID_FKEY);
    }

    private transient IndicatorGeneralSetting _indicatorGeneralSetting;

    /**
     * Get the implicit join path to the
     * <code>public.indicator_general_setting</code> table.
     */
    public IndicatorGeneralSetting indicatorGeneralSetting() {
        if (_indicatorGeneralSetting == null)
            _indicatorGeneralSetting = new IndicatorGeneralSetting(this, Keys.NUMBER_ORIENTED_SETTING__NUMBER_ORIENTED_SETTING_ID_FKEY);

        return _indicatorGeneralSetting;
    }

    @Override
    public NumberOrientedSetting as(String alias) {
        return new NumberOrientedSetting(DSL.name(alias), this);
    }

    @Override
    public NumberOrientedSetting as(Name alias) {
        return new NumberOrientedSetting(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NumberOrientedSetting rename(String name) {
        return new NumberOrientedSetting(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NumberOrientedSetting rename(Name name) {
        return new NumberOrientedSetting(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<LocalDateTime, UUID, LocalDateTime, UUID, UUID, String, UUID, Boolean, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
