/*
 * This file is generated by jOOQ.
 */
package com.supervisor.generated.jooq.tables;


import com.supervisor.generated.jooq.Keys;
import com.supervisor.generated.jooq.Public;
import com.supervisor.generated.jooq.tables.records.EditableDataFieldRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EditableDataField extends TableImpl<EditableDataFieldRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.editable_data_field</code>
     */
    public static final EditableDataField EDITABLE_DATA_FIELD = new EditableDataField();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EditableDataFieldRecord> getRecordType() {
        return EditableDataFieldRecord.class;
    }

    /**
     * The column <code>public.editable_data_field.creation_date</code>.
     */
    public final TableField<EditableDataFieldRecord, LocalDateTime> CREATION_DATE = createField(DSL.name("creation_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.editable_data_field.creator_id</code>.
     */
    public final TableField<EditableDataFieldRecord, UUID> CREATOR_ID = createField(DSL.name("creator_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public.editable_data_field.last_modification_date</code>.
     */
    public final TableField<EditableDataFieldRecord, LocalDateTime> LAST_MODIFICATION_DATE = createField(DSL.name("last_modification_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.editable_data_field.last_modifier_id</code>.
     */
    public final TableField<EditableDataFieldRecord, UUID> LAST_MODIFIER_ID = createField(DSL.name("last_modifier_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.editable_data_field.owner_id</code>.
     */
    public final TableField<EditableDataFieldRecord, UUID> OWNER_ID = createField(DSL.name("owner_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.editable_data_field.tag</code>.
     */
    public final TableField<EditableDataFieldRecord, String> TAG = createField(DSL.name("tag"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.editable_data_field.id</code>.
     */
    public final TableField<EditableDataFieldRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.editable_data_field.is_mandatory</code>.
     */
    public final TableField<EditableDataFieldRecord, Boolean> IS_MANDATORY = createField(DSL.name("is_mandatory"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.editable_data_field.user_scope</code>.
     */
    public final TableField<EditableDataFieldRecord, String> USER_SCOPE = createField(DSL.name("user_scope"), SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.editable_data_field.no</code>.
     */
    public final TableField<EditableDataFieldRecord, Integer> NO = createField(DSL.name("no"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.editable_data_field.is_read_only</code>.
     */
    public final TableField<EditableDataFieldRecord, Boolean> IS_READ_ONLY = createField(DSL.name("is_read_only"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.editable_data_field.default_value</code>.
     */
    public final TableField<EditableDataFieldRecord, String> DEFAULT_VALUE = createField(DSL.name("default_value"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.editable_data_field.must_edit_once</code>.
     */
    public final TableField<EditableDataFieldRecord, Boolean> MUST_EDIT_ONCE = createField(DSL.name("must_edit_once"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.editable_data_field.take_last_value</code>.
     */
    public final TableField<EditableDataFieldRecord, Boolean> TAKE_LAST_VALUE = createField(DSL.name("take_last_value"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.editable_data_field.structure_id</code>.
     */
    public final TableField<EditableDataFieldRecord, UUID> STRUCTURE_ID = createField(DSL.name("structure_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.editable_data_field.order_direction</code>.
     */
    public final TableField<EditableDataFieldRecord, String> ORDER_DIRECTION = createField(DSL.name("order_direction"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.editable_data_field.nb_max_values</code>.
     */
    public final TableField<EditableDataFieldRecord, Integer> NB_MAX_VALUES = createField(DSL.name("nb_max_values"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.editable_data_field.can_be_updated</code>.
     */
    public final TableField<EditableDataFieldRecord, Boolean> CAN_BE_UPDATED = createField(DSL.name("can_be_updated"), SQLDataType.BOOLEAN, this, "");

    private EditableDataField(Name alias, Table<EditableDataFieldRecord> aliased) {
        this(alias, aliased, null);
    }

    private EditableDataField(Name alias, Table<EditableDataFieldRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.editable_data_field</code> table reference
     */
    public EditableDataField(String alias) {
        this(DSL.name(alias), EDITABLE_DATA_FIELD);
    }

    /**
     * Create an aliased <code>public.editable_data_field</code> table reference
     */
    public EditableDataField(Name alias) {
        this(alias, EDITABLE_DATA_FIELD);
    }

    /**
     * Create a <code>public.editable_data_field</code> table reference
     */
    public EditableDataField() {
        this(DSL.name("editable_data_field"), null);
    }

    public <O extends Record> EditableDataField(Table<O> child, ForeignKey<O, EditableDataFieldRecord> key) {
        super(child, key, EDITABLE_DATA_FIELD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<EditableDataFieldRecord> getPrimaryKey() {
        return Keys.EDITABLE_DATA_FIELD_PKEY;
    }

    @Override
    public List<ForeignKey<EditableDataFieldRecord, ?>> getReferences() {
        return Arrays.asList(Keys.EDITABLE_DATA_FIELD__EDITABLE_DATA_FIELD_ID_FKEY, Keys.EDITABLE_DATA_FIELD__EDITABLE_DATA_FIELD_STRUCTURE_ID_FKEY);
    }

    private transient DataField _dataField;
    private transient DataSheetModel _dataSheetModel;

    /**
     * Get the implicit join path to the <code>public.data_field</code> table.
     */
    public DataField dataField() {
        if (_dataField == null)
            _dataField = new DataField(this, Keys.EDITABLE_DATA_FIELD__EDITABLE_DATA_FIELD_ID_FKEY);

        return _dataField;
    }

    /**
     * Get the implicit join path to the <code>public.data_sheet_model</code>
     * table.
     */
    public DataSheetModel dataSheetModel() {
        if (_dataSheetModel == null)
            _dataSheetModel = new DataSheetModel(this, Keys.EDITABLE_DATA_FIELD__EDITABLE_DATA_FIELD_STRUCTURE_ID_FKEY);

        return _dataSheetModel;
    }

    @Override
    public EditableDataField as(String alias) {
        return new EditableDataField(DSL.name(alias), this);
    }

    @Override
    public EditableDataField as(Name alias) {
        return new EditableDataField(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EditableDataField rename(String name) {
        return new EditableDataField(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EditableDataField rename(Name name) {
        return new EditableDataField(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<LocalDateTime, UUID, LocalDateTime, UUID, UUID, String, UUID, Boolean, String, Integer, Boolean, String, Boolean, Boolean, UUID, String, Integer, Boolean> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
