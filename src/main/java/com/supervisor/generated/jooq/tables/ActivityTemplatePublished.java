/*
 * This file is generated by jOOQ.
 */
package com.supervisor.generated.jooq.tables;


import com.supervisor.generated.jooq.Keys;
import com.supervisor.generated.jooq.Public;
import com.supervisor.generated.jooq.tables.records.ActivityTemplatePublishedRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityTemplatePublished extends TableImpl<ActivityTemplatePublishedRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.activity_template_published</code>
     */
    public static final ActivityTemplatePublished ACTIVITY_TEMPLATE_PUBLISHED = new ActivityTemplatePublished();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityTemplatePublishedRecord> getRecordType() {
        return ActivityTemplatePublishedRecord.class;
    }

    /**
     * The column <code>public.activity_template_published.creation_date</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, LocalDateTime> CREATION_DATE = createField(DSL.name("creation_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.creator_id</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, UUID> CREATOR_ID = createField(DSL.name("creator_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public.activity_template_published.last_modification_date</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, LocalDateTime> LAST_MODIFICATION_DATE = createField(DSL.name("last_modification_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column
     * <code>public.activity_template_published.last_modifier_id</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, UUID> LAST_MODIFIER_ID = createField(DSL.name("last_modifier_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.owner_id</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, UUID> OWNER_ID = createField(DSL.name("owner_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.tag</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, String> TAG = createField(DSL.name("tag"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.activity_template_published.id</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.profile_id</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, UUID> PROFILE_ID = createField(DSL.name("profile_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column
     * <code>public.activity_template_published.nb_subscriptions</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, Long> NB_SUBSCRIPTIONS = createField(DSL.name("nb_subscriptions"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.nb_likes</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, Long> NB_LIKES = createField(DSL.name("nb_likes"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.score</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, Double> SCORE = createField(DSL.name("score"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.price</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, Double> PRICE = createField(DSL.name("price"), SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.nb_paid</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, Long> NB_PAID = createField(DSL.name("nb_paid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.icon</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, String> ICON = createField(DSL.name("icon"), SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.availability</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, String> AVAILABILITY = createField(DSL.name("availability"), SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.activity_template_published.nb_views</code>.
     */
    public final TableField<ActivityTemplatePublishedRecord, Long> NB_VIEWS = createField(DSL.name("nb_views"), SQLDataType.BIGINT.nullable(false), this, "");

    private ActivityTemplatePublished(Name alias, Table<ActivityTemplatePublishedRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActivityTemplatePublished(Name alias, Table<ActivityTemplatePublishedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.activity_template_published</code> table
     * reference
     */
    public ActivityTemplatePublished(String alias) {
        this(DSL.name(alias), ACTIVITY_TEMPLATE_PUBLISHED);
    }

    /**
     * Create an aliased <code>public.activity_template_published</code> table
     * reference
     */
    public ActivityTemplatePublished(Name alias) {
        this(alias, ACTIVITY_TEMPLATE_PUBLISHED);
    }

    /**
     * Create a <code>public.activity_template_published</code> table reference
     */
    public ActivityTemplatePublished() {
        this(DSL.name("activity_template_published"), null);
    }

    public <O extends Record> ActivityTemplatePublished(Table<O> child, ForeignKey<O, ActivityTemplatePublishedRecord> key) {
        super(child, key, ACTIVITY_TEMPLATE_PUBLISHED);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<ActivityTemplatePublishedRecord> getPrimaryKey() {
        return Keys.ACTIVITY_TEMPLATE_PUBLISHED_PKEY;
    }

    @Override
    public List<ForeignKey<ActivityTemplatePublishedRecord, ?>> getReferences() {
        return Arrays.asList(Keys.ACTIVITY_TEMPLATE_PUBLISHED__ACTIVITY_TEMPLATE_PUBLISHED_ID_FKEY, Keys.ACTIVITY_TEMPLATE_PUBLISHED__ACTIVITY_TEMPLATE_PUBLISHED_PROFILE_ID_FKEY);
    }

    private transient Activity _activity;
    private transient Profile _profile;

    /**
     * Get the implicit join path to the <code>public.activity</code> table.
     */
    public Activity activity() {
        if (_activity == null)
            _activity = new Activity(this, Keys.ACTIVITY_TEMPLATE_PUBLISHED__ACTIVITY_TEMPLATE_PUBLISHED_ID_FKEY);

        return _activity;
    }

    /**
     * Get the implicit join path to the <code>public.profile</code> table.
     */
    public Profile profile() {
        if (_profile == null)
            _profile = new Profile(this, Keys.ACTIVITY_TEMPLATE_PUBLISHED__ACTIVITY_TEMPLATE_PUBLISHED_PROFILE_ID_FKEY);

        return _profile;
    }

    @Override
    public ActivityTemplatePublished as(String alias) {
        return new ActivityTemplatePublished(DSL.name(alias), this);
    }

    @Override
    public ActivityTemplatePublished as(Name alias) {
        return new ActivityTemplatePublished(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityTemplatePublished rename(String name) {
        return new ActivityTemplatePublished(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityTemplatePublished rename(Name name) {
        return new ActivityTemplatePublished(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<LocalDateTime, UUID, LocalDateTime, UUID, UUID, String, UUID, UUID, Long, Long, Double, Double, Long, String, String, Long> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
