/*
 * This file is generated by jOOQ.
 */
package com.supervisor.generated.jooq.tables;


import com.supervisor.generated.jooq.Keys;
import com.supervisor.generated.jooq.Public;
import com.supervisor.generated.jooq.tables.records.DataLinkSharedRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataLinkShared extends TableImpl<DataLinkSharedRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.data_link_shared</code>
     */
    public static final DataLinkShared DATA_LINK_SHARED = new DataLinkShared();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataLinkSharedRecord> getRecordType() {
        return DataLinkSharedRecord.class;
    }

    /**
     * The column <code>public.data_link_shared.creation_date</code>.
     */
    public final TableField<DataLinkSharedRecord, LocalDateTime> CREATION_DATE = createField(DSL.name("creation_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.data_link_shared.creator_id</code>.
     */
    public final TableField<DataLinkSharedRecord, UUID> CREATOR_ID = createField(DSL.name("creator_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.data_link_shared.last_modification_date</code>.
     */
    public final TableField<DataLinkSharedRecord, LocalDateTime> LAST_MODIFICATION_DATE = createField(DSL.name("last_modification_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.data_link_shared.last_modifier_id</code>.
     */
    public final TableField<DataLinkSharedRecord, UUID> LAST_MODIFIER_ID = createField(DSL.name("last_modifier_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.data_link_shared.owner_id</code>.
     */
    public final TableField<DataLinkSharedRecord, UUID> OWNER_ID = createField(DSL.name("owner_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.data_link_shared.tag</code>.
     */
    public final TableField<DataLinkSharedRecord, String> TAG = createField(DSL.name("tag"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.data_link_shared.id</code>.
     */
    public final TableField<DataLinkSharedRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.data_link_shared.activity_id</code>.
     */
    public final TableField<DataLinkSharedRecord, UUID> ACTIVITY_ID = createField(DSL.name("activity_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.data_link_shared.template_id</code>.
     */
    public final TableField<DataLinkSharedRecord, UUID> TEMPLATE_ID = createField(DSL.name("template_id"), SQLDataType.UUID.nullable(false), this, "");

    private DataLinkShared(Name alias, Table<DataLinkSharedRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataLinkShared(Name alias, Table<DataLinkSharedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.data_link_shared</code> table reference
     */
    public DataLinkShared(String alias) {
        this(DSL.name(alias), DATA_LINK_SHARED);
    }

    /**
     * Create an aliased <code>public.data_link_shared</code> table reference
     */
    public DataLinkShared(Name alias) {
        this(alias, DATA_LINK_SHARED);
    }

    /**
     * Create a <code>public.data_link_shared</code> table reference
     */
    public DataLinkShared() {
        this(DSL.name("data_link_shared"), null);
    }

    public <O extends Record> DataLinkShared(Table<O> child, ForeignKey<O, DataLinkSharedRecord> key) {
        super(child, key, DATA_LINK_SHARED);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<DataLinkSharedRecord> getPrimaryKey() {
        return Keys.DATA_LINK_SHARED_PKEY;
    }

    @Override
    public List<ForeignKey<DataLinkSharedRecord, ?>> getReferences() {
        return Arrays.asList(Keys.DATA_LINK_SHARED__DATA_LINK_SHARED_ID_FKEY, Keys.DATA_LINK_SHARED__DATA_LINK_SHARED_ACTIVITY_ID_FKEY, Keys.DATA_LINK_SHARED__DATA_LINK_SHARED_TEMPLATE_ID_FKEY);
    }

    private transient DataLink _dataLinkSharedIdFkey;
    private transient Activity _activity;
    private transient DataLink _dataLinkSharedTemplateIdFkey;

    /**
     * Get the implicit join path to the <code>public.data_link</code> table,
     * via the <code>data_link_shared_id_fkey</code> key.
     */
    public DataLink dataLinkSharedIdFkey() {
        if (_dataLinkSharedIdFkey == null)
            _dataLinkSharedIdFkey = new DataLink(this, Keys.DATA_LINK_SHARED__DATA_LINK_SHARED_ID_FKEY);

        return _dataLinkSharedIdFkey;
    }

    /**
     * Get the implicit join path to the <code>public.activity</code> table.
     */
    public Activity activity() {
        if (_activity == null)
            _activity = new Activity(this, Keys.DATA_LINK_SHARED__DATA_LINK_SHARED_ACTIVITY_ID_FKEY);

        return _activity;
    }

    /**
     * Get the implicit join path to the <code>public.data_link</code> table,
     * via the <code>data_link_shared_template_id_fkey</code> key.
     */
    public DataLink dataLinkSharedTemplateIdFkey() {
        if (_dataLinkSharedTemplateIdFkey == null)
            _dataLinkSharedTemplateIdFkey = new DataLink(this, Keys.DATA_LINK_SHARED__DATA_LINK_SHARED_TEMPLATE_ID_FKEY);

        return _dataLinkSharedTemplateIdFkey;
    }

    @Override
    public DataLinkShared as(String alias) {
        return new DataLinkShared(DSL.name(alias), this);
    }

    @Override
    public DataLinkShared as(Name alias) {
        return new DataLinkShared(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DataLinkShared rename(String name) {
        return new DataLinkShared(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DataLinkShared rename(Name name) {
        return new DataLinkShared(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<LocalDateTime, UUID, LocalDateTime, UUID, UUID, String, UUID, UUID, UUID> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
